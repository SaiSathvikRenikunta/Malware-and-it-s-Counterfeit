import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.util.regex.*;
import java.util.*;
import java.sql.*;

public class Operations{
	JFrame frame1,frame2,frame3;
	JMenuBar menubar;
	JMenu Navi,user,about,lkfl;
	JMenuItem miHome,miinsert,miupdate,midelete,milogedit,milogins,miabtproject,miabtstudent,miMotif,miNimbus,miCross;
	JLabel lblhead,lblmal,lblmal1,lblcode,lblstyle,lblalleffects,lbleffect,lblallmeasure,lblcounter;
	JTextField tfmal,tfcode;
	JTextArea tastyle,taeffect,tacounter;
	JComboBox<String> jcmal,jceffect,jcmeasure;
	JButton btn;
	JPanel p1,p2,p3,p4,p5,p6,p7,p8,peffect,pmeasure;
	String logname;
	DBAccess db;
	public Operations(){
		super();
	}
	public Operations(String uname,DBAccess db){
		logname = uname;
		this.db = db;
		initializeComponents();
		registerListeners();
		addComponentsToFrame();
		frame1.setBackground(Color.lightGray);
		frame1.setLayout(new GridLayout(10,1)); 
		frame1.setSize(450,400);
		frame1.setVisible(true);
		frame1.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
	}
	public void initializeComponents(){
		frame1 = new JFrame("Home->User insertions");
		frame2 = new JFrame("Home->User updates");
		frame3 = new JFrame("Home->User deletions");
		
		menubar = new JMenuBar();
		
		Navi = new JMenu("Navigations");
		miinsert = new JMenuItem("insert");
		miupdate = new JMenuItem("update");
		midelete = new JMenuItem("delete");
		miHome = new JMenuItem("Log out");
		
		user = new JMenu("User");
		milogedit = new JMenuItem("User details");
		milogins = new JMenuItem("User history");
		
		about = new JMenu("About");
		miabtproject = new JMenuItem("About Project");
		miabtstudent = new JMenuItem("About Student");
		
		lkfl = new JMenu("LAF");
		miMotif = new JMenuItem("Motif");
		miNimbus = new JMenuItem("Nimbus");
		miCross = new JMenuItem("Cross Platform");
		
		lblhead = new JLabel("Insertion");
		
		lblmal = new JLabel("Malware name: ");
		lblmal1 = new JLabel("Malware name: ");
		tfmal = new JTextField(10);
		jcmal = new JComboBox<>(db.getMalwareNames());
		
		lblcode = new JLabel("Mal_id");
		tfcode = new JTextField(5);
		
		lblstyle = new JLabel("Style of attack");
		tastyle = new JTextArea(2,25);
		
		lblalleffects = new JLabel("All effects: ");
		jceffect = new JComboBox<>(db.getEffects());
		lbleffect = new JLabel("Effect: ");
		taeffect = new JTextArea(2,25);
		
		lblallmeasure = new JLabel("All Measures: ");
		jcmeasure = new JComboBox<>(db.getMeasure());
		lblcounter = new JLabel("Counterfeit: ");
		tacounter = new JTextArea(1,25);
		
		btn= new JButton("Submit");
		
		p1 = new JPanel();
		p2 = new JPanel();
		p3 = new JPanel();
		p4 = new JPanel();
		peffect = new JPanel();
		p5 = new JPanel();
		pmeasure = new JPanel();
		p6 = new JPanel();
		p7 = new JPanel();
		p8 = new JPanel();
	}
	public void registerListeners(){
		jceffect.addActionListener(new ActionListener (){
			public void actionPerformed(ActionEvent e){
				String str = taeffect.getText()+jceffect.getSelectedItem()+"\n";
				taeffect.setText(str);
			}
		});
		jcmeasure.addActionListener(new ActionListener (){
			public void actionPerformed(ActionEvent e){
				String str =tacounter.getText()+jcmeasure.getSelectedItem()+"\n";
				tacounter.setText(str);
			}
		});
	/* mal_4
	rootkit 
	programmed in app and once installed it masks its existence. 
	[changing system settings,steal data] 
	[software update upto date, deploying firewall]
	*/
		btn.addActionListener(new ActionListener (){
			public void actionPerformed(ActionEvent e){
				if(btn.getText().equals("Submit")){
					StringTokenizer strt = new StringTokenizer(taeffect.getText(),"\n");
					Vector<String> str1 = new Vector<String>();
					while(strt.hasMoreTokens())
						str1.add(strt.nextToken());
					strt = new StringTokenizer(tacounter.getText(),"\n");
					Vector<String> str2 = new Vector<String>();
					while(strt.hasMoreTokens())
						str2.add(strt.nextToken());
					// System.out.println(tfmal.getText()+"  "+tfcode.getText()+"  "+tastyle.getText()+"  "+str1+"  "+str2);
					JOptionPane.showMessageDialog(frame1, "Malware name: "+tfmal.getText()+"\nMalware code: "+tfcode.getText()+"\nStyle of attack: "+tastyle.getText()+"\nEffects: "+str1+"\nCounterfeit: "+str2,"INFORMATION", JOptionPane.INFORMATION_MESSAGE);
					db.insertion(tfmal.getText(),tfcode.getText(),tastyle.getText(),str1,str2);
					JOptionPane.showMessageDialog(frame1, "Insertion successfull.","INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(btn.getText().equals("Modify")){
					// update values after getting them from data base
					StringTokenizer strt = new StringTokenizer(taeffect.getText(),"\n");
					Vector<String> str1 = new Vector<String>();
					while(strt.hasMoreTokens())
						str1.add(strt.nextToken());
					strt = new StringTokenizer(tacounter.getText(),"\n");
					Vector<String> str2 = new Vector<String>();
					while(strt.hasMoreTokens())
						str2.add(strt.nextToken());
					JOptionPane.showMessageDialog(frame1, "Malware name: "+tfmal.getText()+"\nMalware code: "+tfcode.getText()+"\nStyle of attack: "+tastyle.getText()+"\nEffects: "+str1+"\nCounterfeit: "+str2,"INFORMATION", JOptionPane.INFORMATION_MESSAGE);
					db.updation(tfmal.getText(),tfcode.getText(),tastyle.getText(),str1,str2);
					JOptionPane.showMessageDialog(frame2, "Updated successfull.","INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(btn.getText().equals("Delete")){
					// delete values after conforming values from data base
					StringTokenizer strt = new StringTokenizer(taeffect.getText(),"\n");
					Vector<String> str1 = new Vector<String>();
					while(strt.hasMoreTokens())
						str1.add(strt.nextToken());
					strt = new StringTokenizer(tacounter.getText(),"\n");
					Vector<String> str2 = new Vector<String>();
					while(strt.hasMoreTokens())
						str2.add(strt.nextToken());
					JOptionPane.showMessageDialog(frame1, "Malware name: "+tfmal.getText()+"\nMalware code: "+tfcode.getText()+"\nStyle of attack: "+tastyle.getText()+"\nEffects: "+str1+"\nCounterfeit: "+str2,"INFORMATION", JOptionPane.INFORMATION_MESSAGE);
					db.deletion((String)jcmal.getItemAt(jcmal.getSelectedIndex()));
					JOptionPane.showMessageDialog(frame3, "Deletion successfull.","INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
			}
		});
		
		jcmal.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				//get details of malware from database
				String str = (String)jcmal.getItemAt(jcmal.getSelectedIndex());
				Vector v1 = db.getOfMalware(str);
				Vector v2 = db.getOfCause((String)v1.get(0));
				Vector v3 = db.getOfCounterfeit((String)v1.get(0));
				String s1 = new String();
				String s2 = new String();
				tfcode.setText((String)v1.get(0));
				tastyle.setText((String)v1.get(2));
				for(Object s:v2)
					s1 = s1+(String)s+"\n";
				taeffect.setText(s1);
				for(Object s:v3)
					s2 = s2+(String)s+"\n";
				tacounter.setText(s2);
			}
		});
		miHome.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				if(lblhead.getText().equals("Insertion")){
					frame1.dispose();
				}
				if(lblhead.getText().equals("Updation")){
					frame2.dispose();
				}
				if(lblhead.getText().equals("Deletion")){
					frame3.dispose();
				}
				new Home(db);
			}
		});
		miinsert.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				if(lblhead.getText().equals("Updation")){
					frame2.dispose();
				}
				if(lblhead.getText().equals("Deletion")){
					frame3.dispose();
				}
				lblhead.setText("Insertion");
				btn.setText("Submit");
				frame1.setJMenuBar(menubar);
				frame1.add(p1);
				frame1.add(p2);
				frame1.add(p8);
				frame1.add(p4);
				frame1.add(peffect);
				frame1.add(p5);
				frame1.add(pmeasure);
				frame1.add(p6);
				frame1.add(p7);
				frame1.setBackground(Color.lightGray);
				frame1.setLayout(new GridLayout(10,1)); 
				frame1.setSize(450,400);
				frame1.setVisible(true);
				frame1.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
			}
		});
		miupdate.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				if(lblhead.getText().equals("Insertion")){
					frame1.dispose();
				}
				if(lblhead.getText().equals("Deletion")){
					frame3.dispose();
				}
				lblhead.setText("Updation");
				btn.setText("Modify");
				frame2.setJMenuBar(menubar);
				frame2.add(p1);
				frame2.add(p3);
				frame2.add(p8);
				frame2.add(p4);
				frame2.add(peffect);
				frame2.add(p5);
				frame2.add(pmeasure);
				frame2.add(p6);
				frame2.add(p7);
				frame2.setBackground(Color.lightGray);
				frame2.setLayout(new GridLayout(10,1)); 
				frame2.setSize(450,400);
				frame2.setVisible(true);
				frame2.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
			}
		});
		midelete.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				if(lblhead.getText().equals("Insertion")){
					frame1.dispose();
				}
				if(lblhead.getText().equals("Updation")){
					frame2.dispose();
				}
				lblhead.setText("Deletion");
				btn.setText("Delete");
				frame3.setJMenuBar(menubar);
				frame3.add(p1);
				frame3.add(p3);
				frame3.add(p8);
				frame3.add(p4);
				// frame3.add(peffect);
				frame3.add(p5);
				// frame3.add(pmeasure);
				frame3.add(p6);
				frame3.add(p7);
				frame3.setBackground(Color.lightGray);
				frame3.setLayout(new GridLayout(7,1)); 
				frame3.setSize(450,400);
				frame3.setVisible(true);
				frame3.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
			}
		});
		milogedit.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				Vector<String> v = db.getOfRegister(logname);
				if(lblhead.getText().equals("Insertion")){
					JOptionPane.showMessageDialog(frame1, "Username: "+v.get(0)+"\nName: "+v.get(1)+"\nEmail: "+v.get(2)+"\nPassword: "+v.get(3)+"\nPhone number: "+v.get(4),"INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(lblhead.getText().equals("Updation")){
					JOptionPane.showMessageDialog(frame2, "Username: "+v.get(0)+"\nName: "+v.get(1)+"\nEmail: "+v.get(2)+"\nPassword: "+v.get(3)+"\nPhone number: "+v.get(4),"INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(lblhead.getText().equals("Deletion")){
					JOptionPane.showMessageDialog(frame3, "Username: "+v.get(0)+"\nName: "+v.get(1)+"\nEmail: "+v.get(2)+"\nPassword: "+v.get(3)+"\nPhone number: "+v.get(4),"INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
			}
		});
		milogins.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				Vector<String> v = db.getHistory(logname);
				String str = new String("User name      Name      Date\n");
				for(int i=0;i<v.size();i++){
					str = str+v.get(i);
					if(i%3 == 2)
						str = str+"\n";
					else
						str = str+"      ";
				}
				if(lblhead.getText().equals("Insertion")){
					JOptionPane.showMessageDialog(frame1,str,"INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(lblhead.getText().equals("Updation")){
					JOptionPane.showMessageDialog(frame2,str,"INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(lblhead.getText().equals("Deletion")){
					JOptionPane.showMessageDialog(frame3,str,"INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
			}
		});
		miabtproject.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				if(lblhead.getText().equals("Insertion")){
					JOptionPane.showMessageDialog(frame1, "Project Name: Malware Counterfeit\nDetails: This Project describes about the differenct types \nof software malwares present and their effects caused by \ntheir their presence amd ways to counterfeit it.","INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(lblhead.getText().equals("Updation")){
					JOptionPane.showMessageDialog(frame2, "Project Name: Malware Counterfeit\nDetails: This Project describes about the differenct types \nof software malwares present and their effects caused by \ntheir their presence amd ways to counterfeit it.","INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(lblhead.getText().equals("Deletion")){
					JOptionPane.showMessageDialog(frame3, "Project Name: Malware Counterfeit\nDetails: This Project describes about the differenct types \nof software malwares present and their effects caused by \ntheir their presence amd ways to counterfeit it.","INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
			}
		});
		miabtstudent.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				if(lblhead.getText().equals("Insertion")){
					JOptionPane.showMessageDialog(frame1, "Name of Student: R. Sai Sathvik\nRoll number: 1602-20-737-035\nMain purpose of project: To implement a 1-Tier Architecture java application","INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(lblhead.getText().equals("Updation")){
					JOptionPane.showMessageDialog(frame2, "Name of Student: R. Sai Sathvik\nRoll number: 1602-20-737-035\nMain purpose of project: To implement a 1-Tier Architecture java application","INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
				if(lblhead.getText().equals("Deletion")){
					JOptionPane.showMessageDialog(frame3, "Name of Student: R. Sai Sathvik\nRoll number: 1602-20-737-035\nMain purpose of project: To implement a 1-Tier Architecture java application","INFORMATION", JOptionPane.INFORMATION_MESSAGE);
				}
			}
		});
		miMotif.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent evt) 
			{
				try{
					UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
					SwingUtilities.updateComponentTreeUI(frame1);
					SwingUtilities.updateComponentTreeUI(frame2);
					SwingUtilities.updateComponentTreeUI(frame3);
				}
				catch(ClassNotFoundException|InstantiationException|IllegalAccessException|UnsupportedLookAndFeelException ex)
				{}
			}
		});
	
		miNimbus.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent evt) 
			{
				try{
					UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
					SwingUtilities.updateComponentTreeUI(frame1);
					SwingUtilities.updateComponentTreeUI(frame2);
					SwingUtilities.updateComponentTreeUI(frame3);
				}
				catch(ClassNotFoundException|InstantiationException|IllegalAccessException|UnsupportedLookAndFeelException ex)
				{}
			}
		});
	
		miCross.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent evt) 
			{
				try{
					UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
					SwingUtilities.updateComponentTreeUI(frame1);
					SwingUtilities.updateComponentTreeUI(frame2);
					SwingUtilities.updateComponentTreeUI(frame3);
				}
				catch(ClassNotFoundException|InstantiationException|IllegalAccessException|UnsupportedLookAndFeelException ex)
				{}
			}
		});
		frame1.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				if(db.closeConnection()){
					JOptionPane.showMessageDialog(frame1, "You are Exiting and \n Connection is closed successfully.","INFORMATION", JOptionPane.INFORMATION_MESSAGE);;
				}
				System.exit(0);
			}
		});
		frame2.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				if(db.closeConnection()){
					JOptionPane.showMessageDialog(frame2, "You are Exiting and \n Connection is closed successfully.","INFORMATION", JOptionPane.INFORMATION_MESSAGE);;
				}
				System.exit(0);
			}
		});
		frame3.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				if(db.closeConnection()){
					JOptionPane.showMessageDialog(frame3, "You are Exiting and \n Connection is closed successfully.","INFORMATION", JOptionPane.INFORMATION_MESSAGE);;
				}
				System.exit(0);
			}
		});
	}
	public void addComponentsToFrame(){
		Navi.add(miinsert);
		Navi.add(miupdate);
		Navi.add(midelete);
		Navi.addSeparator();
		Navi.add(miHome);
		
		user.add(milogedit);
		user.add(milogins);
		
		about.add(miabtproject);
		about.add(miabtstudent);
		
		lkfl.add(miCross);
		lkfl.add(miMotif);
		lkfl.add(miNimbus);
		
		menubar.add(Navi);
		menubar.add(user);
		menubar.add(about);
		menubar.add(lkfl);
		
		frame1.setJMenuBar(menubar);
		
		p1.add(lblhead);
		
		p2.add(lblmal);
		p2.add(tfmal);
		
		p8.add(lblcode);
		p8.add(tfcode);
		
		p3.add(lblmal1);
		p3.add(jcmal);
		
		p4.add(lblstyle);
		p4.add(tastyle);
		
		peffect.add(lblalleffects);
		peffect.add(jceffect);
		
		p5.add(lbleffect);
		p5.add(taeffect);
		
		pmeasure.add(lblallmeasure);
		pmeasure.add(jcmeasure);
		
		p6.add(lblcounter);
		p6.add(tacounter);
		
		p7.add(btn);
		
		frame1.add(p1);
		frame1.add(p2);
		frame1.add(p8);
		frame1.add(p4);
		frame1.add(peffect);
		frame1.add(p5);
		frame1.add(pmeasure);
		frame1.add(p6);
		frame1.add(p7);
	}
}
