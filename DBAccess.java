import java.sql.*;
import java.util.*;
// Set classpath=C:\Program Files\Java\jdk-16.0.1\lib\ojdbc6-11.2.0.4.jar;.;

public class DBAccess{
	String pass;
	static Connection con;
	Statement stmt;
	ResultSet rs,rsUpdate;
	Savepoint savePoint,savePoint1;
	int flag;
	public DBAccess(){
		try{
			Class.forName("oracle.jdbc.OracleDriver");
			con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","sathvik","vasavi");
			con.setAutoCommit(false);
			stmt=con.createStatement();
			savePoint = con.setSavepoint("lastSave");
		}
		catch(ClassNotFoundException ex){
			System.out.println(ex);
		}
		catch(SQLException ex){
			System.out.println(ex);
		}
	}
	public String getPass(String uname){
		try{
			rs=stmt.executeQuery("select password from registration where username = '"+uname+"'");
			rs.next();
			pass = rs.getString(1);
			return pass;
		}
		catch(SQLException ex){
			System.out.println(ex);
			return null;
		}
	}
	public void enterLogin(String uname,String pass){
		try{
			flag = stmt.executeUpdate("insert into userlogin values ('"+uname+"','"+pass+"',sysdate)");
		}
		catch(SQLException ex){
			System.out.println(ex);
		}
	}
	public Vector<String> getHistory(String uname){
		try{
			rs = stmt.executeQuery("select * from userlogin where username = '"+uname+"'");
			Vector<String> v = new Vector<>();
			while(rs.next()){
				v.add(rs.getString(1));
				v.add(rs.getString(2));
				v.add(rs.getString(3));
			}
			return v;
		}
		catch(SQLException ex){
			System.out.println(ex);
			return null;
		}
	}
	public Vector<String> getMalwareNames(){//alla names
		try{
			rs = stmt.executeQuery("select malname from malware");
			Vector<String> v = new Vector<>();
			while(rs.next())
				v.add(rs.getString(1));
			return v;
		}
		catch(SQLException ex){
			System.out.println(ex);
			return null;
		}
	}
	public Vector<String> getEffects(){//all effects
		try{
			rs = stmt.executeQuery("select effect from cause");
			Vector<String> v = new Vector<>();
			while(rs.next())
				v.add(rs.getString(1));
			return v;
		}
		catch(SQLException ex){
			System.out.println(ex);
			return null;
		}
	}
	public Vector<String> getMeasure(){//all measures
		try{
			rs = stmt.executeQuery("select measure from counterfeit");
			Vector<String> v = new Vector<>();
			while(rs.next())
				v.add(rs.getString(1));
			return v;
		}
		catch(SQLException ex){
			System.out.println(ex);
			return null;
		}
	}
	public Vector<String> getOfMalware(String malname){//of specific malware
		try{
			rs = stmt.executeQuery("select * from malware where malname = '"+malname+"'");
			Vector<String> v = new Vector<>();
			while(rs.next()){
				v.add(rs.getString(1));
				v.add(rs.getString(2));
				v.add(rs.getString(3));
			}
			return v;
		}
		catch(SQLException ex){
			System.out.println(ex);
			return null;
		}
	}
	public Vector<String> getOfCause(String malid){//of specific cause
		try{
			rs = stmt.executeQuery("select effect from cause where malid = '"+malid+"'");
			Vector<String> v = new Vector<>();
			while(rs.next())
				v.add(rs.getString(1));
			return v;
		}
		catch(SQLException ex){
			System.out.println(ex);
			return null;
		}
	}
	public Vector<String> getOfCounterfeit(String malid){//of specific counterfeit
		try{
			rs = stmt.executeQuery("select measure from counterfeit where malid = '"+malid+"'");
			Vector<String> v = new Vector<>();
			while(rs.next())
				v.add(rs.getString(1));
			return v;
		}
		catch(SQLException ex){
			System.out.println(ex);
			return null;
		}
	}
	public Vector<String> getOfRegister(String uname){
		try{
			rs = stmt.executeQuery("select * from registration where username = '"+uname+"'");
			Vector<String> v = new Vector<>();
			while(rs.next()){
				v.add(rs.getString(1));
				v.add(rs.getString(2));
				v.add(rs.getString(3));
				v.add(rs.getString(4));
				v.add(rs.getString(5));
			}
			return v;
		}
		catch(SQLException ex){
			System.out.println(ex);
			return null;
		}
	}
	public boolean insertion(String malname,String malid,String style,Vector<String> effect,Vector<String> counter){
		try{
			savePoint = con.setSavepoint("lastSave");
			stmt.executeUpdate("insert into malware values ('"+malid+"','"+malname+"','"+style+"')");
			for(String str : effect)
				stmt.executeUpdate("insert into cause values ('"+malid+"','"+(String)str+"')");
			for(String str : counter)
				stmt.executeUpdate("insert into counterfeit values ('"+malid+"','"+(String)str+"')");
			// rs = stmt.executeQuery("select malid,malname,ATTACKSTYLE from malware");
			// while(rs.next())
				// System.out.println(rs.getString(1)+"   "+rs.getString(2)+"   "+rs.getString(3));
			// con.rollback(savePoint);
			return true;
		}
		catch(SQLIntegrityConstraintViolationException ae){
			System.out.println("already exists");
			return false;
		}
		catch(SQLException ex){
			try{
				con.rollback(savePoint);
			}
			catch(SQLException ex1){}
			System.out.println(ex);
			return false;
		}
	}
	public boolean deletion(String malname){
		try{
			savePoint1 = con.setSavepoint("lastSave1");
			rs = stmt.executeQuery("select malid from malware where malname = '"+malname+"'");
			rs.next();
			String malid  = rs.getString(1);
			stmt.executeUpdate("delete from cause where malid = '"+malid+"'");
			stmt.executeUpdate("delete from counterfeit where malid = '"+malid+"'");
			stmt.executeUpdate("delete from malware where malid = '"+malid+"'");
			return true;
		}
		catch(SQLException ex){
			try{
				con.rollback(savePoint1);
			}
			catch(SQLException ex1){}
			System.out.println(ex);
			return false;
		}
	}
	public boolean updation(String malname,String malid,String style,Vector<String> effect,Vector<String> counter){
		try{
			if(deletion(malname)){
				if(insertion(malname,malid,style,effect,counter)){}
				else{
					con.rollback(savePoint1);
					throw new SQLException();
				}
			}
			else{
				con.rollback(savePoint1);
				throw new SQLException();
			}
			return true;
		}
		catch(SQLException ex){
			try{
				con.rollback(savePoint1);
			}
			catch(SQLException ex1){System.out.println(ex);}
			System.out.println(ex); 
			return false;
		}
	}
	public boolean getRegistered(String uname,String name,String email,String pass,Long phno){
		try{
			stmt.executeUpdate("insert into registration values ('"+uname+"','"+name+"','"+email+"','"+pass+"',"+phno+")");
			return true;
		}
		catch(SQLException ex){
			return false;
		}
	}
	public boolean closeConnection(){
		try{
			con.commit();
			if(!con.isClosed())
				con.close();
			return true;
		}
		catch(SQLException e){
			System.out.println(e);
			return false;
		}
	}
}
